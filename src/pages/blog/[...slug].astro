---
import { type CollectionEntry, getCollection } from 'astro:content';
import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

interface Props {
	entry: CollectionEntry<'blog'>;
}

// This is a dynamic route that uses the rest operator
export async function getStaticPaths() {
	const blog = await getCollection('blog');
	return blog.map((entry) => ({
		params: { slug: entry.id },
		props: { entry },
	}));
}

const { entry } = Astro.props;
// For glob loader, get the rendered HTML content
const htmlContent = entry.rendered?.html || entry.body || '';
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<a class="back-link" href="/blog/">
						<Icon icon="arrow-left" />
						 Back to Blog
					</a>
					<Hero title={entry.data.title} align="start">
						<div class="details">
							<div class="tags">
								{entry.data.tags.map((t) => <Pill>{t}</Pill>)}
							</div>
							<p class="description">{entry.data.description}</p>
						</div>
					</Hero>
				</div>
			</header>
			<main class="wrapper">
				<div class="stack gap-10 content">
					<div class="blog-meta">
						<div class="meta-item">
							<Icon icon="calendar" size="1.2em" />
							<time datetime={entry.data.publishDate.toISOString()}>
								{entry.data.publishDate.toLocaleDateString('en-US', {
									year: 'numeric',
									month: 'long',
									day: 'numeric',
								})}
							</time>
						</div>
						<div class="meta-item">
							<Icon icon="clock" size="1.2em" />
							<span>{entry.data.readTime}</span>
						</div>
						{entry.data.publication && (
							<div class="meta-item publication">
								<Icon icon="bookmark" size="1.2em" />
								<span>{entry.data.publication}</span>
							</div>
						)}
						{entry.data.externalUrl && (
							<div class="meta-item external">
								<Icon icon="external-link" size="1.2em" />
								<a href={entry.data.externalUrl} target="_blank" rel="noopener noreferrer">
									Read on {entry.data.publication}
								</a>
							</div>
						)}
					</div>
					{entry.data.img && (
						<div class="hero-image">
							<img src={entry.data.img} alt={entry.data.img_alt} />
						</div>
					)}
					<div class="content-body">
						<div set:html={htmlContent} />
					</div>
				</div>
			</main>
		</div>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.back-link {
		display: none;
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem 0;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: center;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
		flex-wrap: wrap;
	}

	.description {
		font-size: var(--text-lg);
		max-width: 54ch;
		color: var(--gray-300);
		line-height: 1.5;
		margin: 0;
	}

	.blog-meta {
		display: flex;
		flex-wrap: wrap;
		gap: 1rem;
		align-items: center;
		justify-content: center;
		padding: 1.5rem;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 1rem;
		font-size: var(--text-sm);
	}

	.meta-item {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		color: var(--gray-300);
	}

	.meta-item.publication {
		color: var(--accent-regular);
		font-weight: 600;
	}

	.meta-item.external a {
		color: var(--accent-regular);
		text-decoration: none;
		transition: color var(--theme-transition);
	}

	.meta-item.external a:hover {
		color: var(--accent-text-over);
	}

	.hero-image {
		width: 100%;
		max-height: 400px;
		overflow: hidden;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
	}

	.hero-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.content {
		max-width: 65ch;
		margin-inline: auto;
	}

	.content-body {
		font-size: var(--text-lg);
		line-height: 1.7;
		color: var(--gray-200);
	}

	.content-body h1,
	.content-body h2,
	.content-body h3,
	.content-body h4,
	.content-body h5,
	.content-body h6 {
		color: var(--gray-0);
		margin-top: 2rem;
		margin-bottom: 1rem;
		line-height: 1.3;
	}

	.content-body h1 {
		font-size: var(--text-3xl);
	}

	.content-body h2 {
		font-size: var(--text-2xl);
	}

	.content-body h3 {
		font-size: var(--text-xl);
	}

	.content-body p {
		margin-bottom: 1.5rem;
	}

	.content-body ul,
	.content-body ol {
		margin-bottom: 1.5rem;
		padding-left: 2rem;
	}

	.content-body li {
		margin-bottom: 0.5rem;
	}

	.content-body blockquote {
		border-left: 4px solid var(--accent-regular);
		padding-left: 1.5rem;
		margin: 2rem 0;
		font-style: italic;
		color: var(--gray-300);
	}

	.content-body code {
		background: var(--gray-999);
		color: var(--gray-200);
		padding: 0.25rem 0.5rem;
		border-radius: 0.25rem;
		font-size: 0.9em;
	}

	.content-body pre {
		background: var(--gray-999);
		padding: 1.5rem;
		border-radius: 0.5rem;
		overflow-x: auto;
		margin: 1.5rem 0;
	}

	.content-body pre code {
		background: none;
		padding: 0;
	}

	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
		}

		.details {
			flex-direction: row;
			gap: 2.5rem;
		}

		.content {
			text-align: start;
		}

		.description {
			font-size: var(--text-xl);
		}

		.blog-meta {
			justify-content: flex-start;
			gap: 2rem;
		}

		.hero-image {
			max-height: 500px;
		}
	}
</style>