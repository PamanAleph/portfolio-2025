---
import type { CollectionEntry } from 'astro:content';
import Icon from './Icon.astro';
import Pill from './Pill.astro';

interface Props {
	project: CollectionEntry<'work'>;
}

const { data, id } = Astro.props.project;

// Get the first image for preview - support both single image and multiple images format
const previewImage = data.images && data.images.length > 0 
	? { src: data.images[0].src, alt: data.images[0].alt || '' }
	: { src: data.img, alt: data.img_alt || '' };
---

<article class="project-card">
	<div class="project-image">
		{previewImage.src && (
			<img src={previewImage.src} alt={previewImage.alt} loading="lazy" decoding="async" />
		)}
	</div>
	<div class="project-content">
		<div class="project-meta">
			<time datetime={data.publishDate.toISOString()}>
				{data.publishDate.toLocaleDateString('en-US', {
					year: 'numeric',
					month: 'short',
				})}
			</time>
		</div>
		<h3>
			<a href={`/work/${id}`}>
				{data.title}
			</a>
		</h3>
		<p class="project-description">{data.description}</p>
		<div class="project-tags">
			{data.tags.slice(0, 3).map((tag) => (
				<Pill>{tag}</Pill>
			))}
			{data.tags.length > 3 && (
				<span class="more-tags">+{data.tags.length - 3}</span>
			)}
		</div>
		<div class="project-footer">
			<a href={`/work/${id}`} class="read-more">
				Learn More
				<Icon icon="arrow-right" size="1rem" />
			</a>
			<div class="project-links">
				{data.githubUrl && (
					<a href={data.githubUrl} target="_blank" rel="noopener noreferrer" class="project-link" title="View GitHub Repository">
						<Icon icon="github-logo" size="1.2rem" />
					</a>
				)}
				{data.projectUrl && (
					<a href={data.projectUrl} target="_blank" rel="noopener noreferrer" class="project-link" title="View Live Project">
						<Icon icon="external-link" size="1.2rem" />
					</a>
				)}
			</div>
		</div>
	</div>
</article>

<style>
	.project-card {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		padding: 1.5rem;
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
		transition: box-shadow var(--theme-transition);
		height: 100%;
	}

	.project-card:hover {
		box-shadow: var(--shadow-md);
	}

	.project-image {
		width: 100%;
		height: 200px;
		overflow: hidden;
		border-radius: 1rem;
	}

	.project-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform var(--theme-transition);
	}

	.project-card:hover .project-image img {
		transform: scale(1.05);
	}

	.project-content {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		flex: 1;
	}

	.project-meta {
		font-size: var(--text-xs);
		color: var(--gray-400);
	}

	.project-content h3 {
		font-size: var(--text-xl);
		color: var(--gray-0);
		line-height: 1.3;
		margin: 0;
	}

	.project-content h3 a {
		color: inherit;
		text-decoration: none;
		transition: color var(--theme-transition);
	}

	.project-content h3 a:hover {
		color: var(--accent-regular);
	}

	.project-description {
		color: var(--gray-300);
		font-size: var(--text-sm);
		line-height: 1.5;
		margin: 0;
		flex: 1;
	}

	.project-tags {
		display: flex;
		gap: 0.5rem;
		flex-wrap: wrap;
		align-items: center;
	}

	.more-tags {
		font-size: var(--text-xs);
		color: var(--gray-400);
		padding: 0.25rem 0.5rem;
		background: var(--gray-800);
		border-radius: 0.375rem;
	}

	.project-footer {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-top: auto;
		padding-top: 1rem;
		border-top: 1px solid var(--gray-800);
	}

	.read-more {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		color: var(--accent-regular);
		text-decoration: none;
		font-size: var(--text-sm);
		font-weight: 600;
		transition: color var(--theme-transition);
	}

	.read-more:hover {
		color: var(--accent-dark);
	}

	.project-links {
		display: flex;
		gap: 0.5rem;
	}

	.project-link {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 2.5rem;
		height: 2.5rem;
		border-radius: 0.5rem;
		background: var(--gray-800);
		color: var(--gray-300);
		text-decoration: none;
		transition: all var(--theme-transition);
	}

	.project-link:hover {
		background: var(--accent-regular);
		color: var(--accent-text-over);
		transform: translateY(-2px);
	}

	@media (min-width: 50em) {
		.project-card {
			padding: 2rem;
			gap: 2rem;
		}

		.project-image {
			height: 240px;
		}

		.project-content h3 {
			font-size: var(--text-2xl);
		}

		.project-description {
			font-size: var(--text-base);
		}
	}
</style>
